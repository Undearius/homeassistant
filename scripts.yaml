sunset:
  alias: Sunset
  sequence:
  - scene: scene.sunset_yellow
  - delay:
      hours: 0
      minutes: 0
      seconds: 10
      milliseconds: 0
  - scene: scene.sunset_orange
  - delay:
      hours: 0
      minutes: 0
      seconds: 10
      milliseconds: 0
  - scene: scene.sunset_red
  - delay:
      hours: 0
      minutes: 0
      seconds: 10
      milliseconds: 0
  - scene: scene.sunset_purple
  - delay:
      hours: 0
      minutes: 0
      seconds: 10
      milliseconds: 0
  - type: turn_off
    device_id: 7baa77eeb6604448a7c10fb87d16a286
    entity_id: light.alistair_main
    domain: light
  mode: single
sunrise:
  alias: Sunrise
  sequence:
  - service: light.turn_on
    data_template:
      entity_id: '{{light}}'
      brightness: 1
      rgb_color:
      - 255
      - 20
      - 20
  - service: light.turn_on
    data_template:
      entity_id: '{{light}}'
      brightness: 30
      rgb_color:
      - 230
      - 70
      - 20
      transition: 30
  - delay:
      hours: 0
      minutes: 0
      seconds: 30
      milliseconds: 0
  - service: light.turn_on
    data_template:
      entity_id: '{{light}}'
      brightness: 100
      rgb_color:
      - 230
      - 120
      - 40
      transition: 120
  - delay:
      hours: 0
      minutes: 2
      seconds: 0
      milliseconds: 0
  - service: light.turn_on
    data_template:
      entity_id: '{{light}}'
      brightness: 200
      rgb_color:
      - 255
      - 170
      - 90
      transition: 120
  - delay:
      hours: 0
      minutes: 2
      seconds: 0
      milliseconds: 0
  - service: light.turn_on
    data_template:
      entity_id: '{{light}}'
      brightness: 255
      rgb_color:
      - 255
      - 230
      - 150
      transition: 120
  mode: parallel
  max: 10
boost_ac:
  alias: Boost A/C
  description: ''
  sequence:
  - service: climate.set_temperature
    data:
      target_temp_low: '{{ state_attr(''climate.thermostat'',''target_temp_low'')
        }}'
      target_temp_high: '{{ state_attr(''climate.thermostat'',''target_temp_high'')
        | float - 1 }}'
    target:
      entity_id: climate.thermostat
  - delay:
      hours: 1
  - service: climate.set_temperature
    data:
      target_temp_low: '{{ state_attr(''climate.thermostat'',''target_temp_low'')
        }}'
      target_temp_high: '{{ state_attr(''climate.thermostat'',''target_temp_high'')
        | float + 1 }}'
    target:
      entity_id: climate.thermostat
  mode: parallel
  max: 10
boost_heat:
  alias: Boost Heat
  sequence:
  - service: climate.set_temperature
    data:
      target_temp_low: '{{ state_attr(''climate.thermostat'',''target_temp_low'')
        | float + 1 }}'
      target_temp_high: '{{ state_attr(''climate.thermostat'',''target_temp_high'')
        }}'
    target:
      entity_id: climate.thermostat
  - delay:
      hours: 1
  - service: climate.set_temperature
    data:
      target_temp_low: '{{ state_attr(''climate.thermostat'',''target_temp_low'')
        | float - 1 }}'
      target_temp_high: '{{ state_attr(''climate.thermostat'',''target_temp_high'')
        }}'
    target:
      entity_id: climate.thermostat
  description: ''
  mode: parallel
  max: 10
kickstart_heat:
  alias: Kickstart Heat
  sequence:
  - service: scene.create
    data:
      snapshot_entities: climate.thermostat
      scene_id: climate_before
  - service: climate.set_temperature
    data:
      target_temp_low: '{{ state_attr("climate.thermostat","current_temperature")
        | float + 1 }}'
      target_temp_high: '{{ state_attr("climate.thermostat","target_temp_high") }}'
    target:
      entity_id: climate.thermostat
  - delay:
      seconds: 1
  - scene: scene.climate_before
  description: ''
  mode: single
boost_fan:
  alias: Boost Fan
  sequence:
  - service: climate.set_fan_mode
    data:
      fan_mode: 'on'
    target:
      entity_id: climate.thermostat
  - delay:
      hours: 1
  - service: climate.set_fan_mode
    data:
      fan_mode: 'off'
    target:
      entity_id: climate.thermostat
  description: ''
  mode: parallel
  max: 10
magic_button:
  sequence:
  - choose:
    - conditions:
      - condition: time
        after: '16:00:00'
        before: '19:00:00'
      - condition: or
        conditions:
        - condition: state
          entity_id: light.kitchen
          state: 'off'
        - condition: state
          entity_id: light.dining_table
          state: 'off'
      sequence:
      - service: light.turn_on
        target:
          entity_id:
          - light.kitchen
          - light.dining_table
        data: {}
    - conditions:
      - condition: or
        conditions:
        - condition: time
          after: '18:30:00'
          before: '19:30:00'
        - condition: time
          weekday:
          - sat
          - sun
          after: '11:30:00'
          before: '12:30:00'
      - condition: state
        entity_id: light.alistair_main
        state: 'off'
      - condition: not
        conditions:
        - condition: state
          entity_id: media_player.alistair_room
          state: playing
        - condition: state
          entity_id: input_boolean.alistair_sound_trigger
          state: 'on'
      sequence:
      - service: light.turn_on
        target:
          entity_id: light.alistair_main
        data:
          brightness_pct: 100
          kelvin: 3500
    - conditions:
      - condition: state
        entity_id: light.alistair_main
        state: 'on'
      - condition: or
        conditions:
        - condition: time
          after: '18:30:00'
          before: '20:00:00'
        - condition: time
          weekday:
          - sat
          - sun
          after: '11:30:00'
          before: '12:30:00'
      - condition: state
        entity_id: input_boolean.alistair_sound_trigger
        state: 'off'
      sequence:
      - service: automation.trigger
        target:
          entity_id: automation.alistair_reading_light_long
        data: {}
    - conditions:
      - condition: state
        entity_id: input_boolean.alistair_sound_trigger
        state: 'on'
      sequence:
      - service: automation.trigger
        target:
          entity_id: automation.turn_on_white_noise
        data: {}
    default:
    - service: light.toggle
      target:
        entity_id: light.wled_bed
      data:
        brightness_pct: 5
        effect: Solid
        xy_color:
        - 0.58
        - 0.39
  mode: single
  alias: Magic Button
  icon: mdi:auto-fix
party_time:
  alias: Party Time
  sequence:
  - service: lifx.set_state
    data:
      power: false
    target:
      entity_id: light.alistair_main
  - data:
      entity_id: media_player.alistair_room
    service: media_player.unjoin
  - data:
      volume_level: 0.5
    service: media_player.volume_set
    target:
      entity_id: media_player.alistair_room
  - service: media_player.play_media
    data:
      media_content_id: x-file-cifs://10.0.0.10/media/Music/Darude/2000-Before%20the%20Storm/01%20Sandstorm.mp3
      media_content_type: music
    target:
      entity_id: media_player.alistair_room
  - service: media_player.repeat_set
    data:
      repeat: 'off'
    target:
      entity_id: media_player.alistair_room
  - wait_for_trigger:
    - platform: state
      entity_id: media_player.alistair_room
      to: playing
  - delay:
      hours: 0
      minutes: 0
      seconds: 1
      milliseconds: 0
  - service: lifx.set_state
    data:
      power: true
      brightness_pct: 100
      hs_color:
      - 40
      - 50
    target:
      entity_id: light.alistair_main
  - service: lifx.set_state
    data:
      power: false
      transition: 2
    target:
      entity_id: light.alistair_main
  - delay:
      hours: 0
      minutes: 0
      seconds: 13
      milliseconds: 500
  - service: lifx.effect_pulse
    data:
      brightness: 50
      rgb_color:
      - 0
      - 0
      - 255
      cycles: 4
      period: 0.15
    target:
      entity_id: light.alistair_main
  - delay:
      hours: 0
      minutes: 0
      seconds: 3
      milliseconds: 500
  - service: lifx.effect_pulse
    data:
      period: 0.15
      cycles: 4
      brightness: 120
      rgb_color:
      - 255
      - 0
      - 0
    target:
      entity_id: light.alistair_main
  - delay:
      hours: 0
      minutes: 0
      seconds: 3
      milliseconds: 500
  - service: lifx.effect_pulse
    data:
      period: 0.15
      cycles: 4
      brightness: 60
      rgb_color:
      - 0
      - 255
      - 0
    target:
      entity_id: light.alistair_main
  - delay:
      hours: 0
      minutes: 0
      seconds: 7
      milliseconds: 0
  - service: lifx.effect_colorloop
    data:
      brightness: 255
      change: 22
      period: 0.05
    target:
      entity_id: light.alistair_main
  - delay:
      hours: 0
      minutes: 0
      seconds: 56
      milliseconds: 0
  - service: lifx.set_state
    data:
      power: true
      brightness_pct: 100
      rgb_color:
      - 0
      - 0
      - 255
    target:
      entity_id: light.alistair_main
  - service: lifx.set_state
    data:
      power: false
      transition: 2
    target:
      entity_id: light.alistair_main
  - delay:
      hours: 0
      minutes: 1
      seconds: 3
      milliseconds: 0
  - service: lifx.effect_colorloop
    data:
      brightness: 255
      change: 22
      period: 0.05
    target:
      entity_id: light.alistair_main
  - delay:
      hours: 0
      minutes: 1
      seconds: 10
      milliseconds: 0
  - service: lifx.set_state
    data:
      power: true
      brightness_pct: 100
      rgb_color:
      - 255
      - 0
      - 0
    target:
      entity_id: light.alistair_main
  - service: lifx.set_state
    data:
      power: false
      transition: 3
    target:
      entity_id: light.alistair_main
  mode: restart
  icon: mdi:party-popper
alistair_trigger_light:
  alias: Alistair Light with Trigger
  variables:
    transition: '{{ states("input_number.fade_time") | float * 60 }}'
  fields:
    brightness_pct:
      description: Brightness percent
      example: 75
      selector:
        number:
          min: 0
          max: 100
          step: 1
          unit_of_measurement: '%'
          mode: slider
    colour:
      description: HS colour values
      example: 45, 10
    transition:
      description: Time to transition to these settings
      example: 5
      selector:
        number:
          min: 0
          max: 10
          step: 1
          unit_of_measurement: seconds
          mode: slider
  sequence:
  - service: light.turn_on
    data:
      brightness_pct: '{{ brightness_pct }}'
      entity_id: light.alistair_main
      hs_color: '[ {{colour}} ]'
      transition: '{{ transition | float }}'
  - delay:
      seconds: '{{ transition | float }}'
  - service: input_boolean.turn_on
    entity_id: input_boolean.alistair_sound_trigger
  - delay:
      hours: 0
      minutes: 20
      seconds: 0
      milliseconds: 0
  - service: input_boolean.turn_off
    entity_id: input_boolean.alistair_sound_trigger
  mode: restart
alistair_light:
  alias: Alistair Light
  variables:
    transition: '{{ states("input_number.fade_time") | float * 60 }}'
  fields:
    brightness_pct:
      description: Brightness percent
      example: 75
      selector:
        number:
          min: 0
          max: 100
          step: 1
          unit_of_measurement: '%'
          mode: slider
    colour:
      description: HS colour values
      example: 45, 10
    transition:
      description: Time to transition to these settings
      example: 5
      selector:
        number:
          min: 0
          max: 10
          step: 1
          unit_of_measurement: seconds
          mode: slider
  sequence:
  - service: light.turn_on
    data:
      brightness_pct: '{{ brightness_pct | float }}'
      entity_id: light.alistair_main
      hs_color: '[ {{colour}} ]'
      transition: '{{ transition | float }}'
  mode: restart
kickstart_ac:
  alias: Kickstart A/C
  sequence:
  - service: scene.create
    data:
      snapshot_entities: climate.thermostat
      scene_id: climate_before
  - service: climate.set_temperature
    data:
      target_temp_low: '{{ state_attr("climate.thermostat","target_temp_low") }}'
      target_temp_high: '{{ state_attr("climate.thermostat","current_temperature")
        | float - 1 }}'
    target:
      entity_id: climate.thermostat
  - delay:
      seconds: 1
  - scene: scene.climate_before
  description: ''
  mode: single
kickstart_fan:
  alias: Kickstart Fan
  sequence:
  - service: climate.set_fan_mode
    data:
      fan_mode: 'on'
    target:
      entity_id: climate.thermostat
  - delay:
      hours: 0
      minutes: 15
      seconds: 0
      milliseconds: 0
  - service: climate.set_fan_mode
    data:
      fan_mode: 'off'
    target:
      entity_id: climate.thermostat
  description: ''
  mode: single
'1646789693540':
  alias: Garage Door Notification
  use_blueprint:
    path: homeassistant/confirmable_notification.yaml
    input:
      notify_device: 2e8ba12176492e2b3bcddf3fce1e95aa
      title: Garage Door open
      message: The garage door has been open for 1 hour. Do you want to close it?
      confirm_text: Close Door
      confirm_action:
      - device_id: 7eb71993650f9a57276a8f9e8fd99f6d
        domain: cover
        entity_id: cover.garage_door
        type: close
  mode: single
alistair_quiet_time:
  alias: Alistair Quiet Time
  sequence:
  - data:
      entity_id: media_player.alistair_room
    service: media_player.unjoin
  - data:
      volume_level: 0.18
    service: media_player.volume_set
    target:
      entity_id: media_player.alistair_room
  - service: media_player.play_media
    data:
      media_content_id: S://10.0.0.10/media/Music/Playlists/QuietTime.m3u
      media_content_type: playlist
    target:
      entity_id: media_player.alistair_room
    metadata:
      title: QuietTime.m3u
      thumbnail:
      media_class: playlist
      children_media_class:
      navigateIds:
      - {}
      - media_content_type: library
        media_content_id: ''
      - media_content_type: playlist
        media_content_id: A:PLAYLISTS
  - service: media_player.shuffle_set
    data:
      shuffle: true
    target:
      entity_id: media_player.alistair_room
  - service: media_player.repeat_set
    data:
      repeat: all
    target:
      entity_id: media_player.alistair_room
  - service: script.alistair_light
    data:
      brightness_pct: 25
      transition: 10
      colour: 15, 50
  - service: light.turn_on
    data: {}
    target:
      entity_id: light.alistair_main_ir
  mode: single
'1647729706760':
  alias: Party Time Alt
  sequence:
  - service: media_player.unjoin
    data: {}
    target:
      entity_id: media_player.alistair_room
  - data:
      volume_level: 0.5
    service: media_player.volume_set
    target:
      entity_id: media_player.alistair_room
  - service: media_player.play_media
    data:
      media_content_id: x-file-cifs://10.0.0.10/media/Music/Lady%20Gaga/2009-The%20Fame%20Monster/2-01%20Lady%20Gaga%20-%20Just%20Dance%20(feat.%20Colby%20O'Donis).m4a
      media_content_type: music
    target:
      entity_id: media_player.alistair_room
  - service: media_player.repeat_set
    data:
      repeat: 'off'
    target:
      entity_id: media_player.alistair_room
  mode: restart
  icon: mdi:party-popper
rowan_light:
  alias: Rowan Light
  sequence:
  - service: light.turn_on
    data:
      brightness_pct: '{{ brightness_pct }}'
      entity_id: light.rowan_main
      hs_color: '[ {{colour}} ]'
      transition: '{{ transition | float }}'
  variables:
    transition: '{{ states("input_number.fade_time") | float * 60 }}'
  fields:
    brightness_pct:
      description: Brightness percent
      example: 75
      selector:
        number:
          min: 0
          max: 100
          step: 1
          unit_of_measurement: '%'
          mode: slider
    colour:
      description: HS colour values
      example: 45, 10
    transition:
      description: Time to transition to these settings
      example: 5
      selector:
        number:
          min: 0
          max: 10
          step: 1
          unit_of_measurement: seconds
          mode: slider
  mode: restart
rowan_trigger_light:
  alias: Rowan Light with Trigger
  sequence:
  - service: light.turn_on
    data:
      brightness_pct: '{{ brightness_pct }}'
      entity_id: light.rowan_main
      hs_color: '[ {{colour}} ]'
      transition: '{{ transition | float }}'
  - delay:
      seconds: '{{ transition | float }}'
  - service: input_boolean.turn_on
    entity_id: input_boolean.rowan_sound_trigger
  - delay:
      hours: 0
      minutes: 20
      seconds: 0
      milliseconds: 0
  - service: input_boolean.turn_off
    entity_id: input_boolean.rowan_sound_trigger
  variables:
    transition: '{{ states("input_number.fade_time") | float * 60 }}'
  fields:
    brightness_pct:
      description: Brightness percent
      example: 75
      selector:
        number:
          min: 0
          max: 100
          step: 1
          unit_of_measurement: '%'
          mode: slider
    colour:
      description: HS colour values
      example: 45, 10
    transition:
      description: Time to transition to these settings
      example: 5
      selector:
        number:
          min: 0
          max: 10
          step: 1
          unit_of_measurement: seconds
          mode: slider
  mode: restart
rowan_quiet_time:
  alias: Rowan Quiet Time
  sequence:
  - data:
      entity_id: media_player.rowan_room
    service: media_player.unjoin
  - data:
      volume_level: 0.18
    service: media_player.volume_set
    target:
      entity_id: media_player.rowan_room
  - service: media_player.play_media
    data:
      media_content_id: S://10.0.0.10/media/Music/Playlists/QuietTime.m3u
      media_content_type: playlist
    target:
      entity_id: media_player.rowan_room
    metadata:
      title: QuietTime.m3u
      thumbnail:
      media_class: playlist
      children_media_class:
      navigateIds:
      - {}
      - media_content_type: library
        media_content_id: ''
      - media_content_type: playlist
        media_content_id: A:PLAYLISTS
  - service: media_player.shuffle_set
    data:
      shuffle: true
    target:
      entity_id: media_player.rowan_room
  - service: media_player.repeat_set
    data:
      repeat: all
    target:
      entity_id: media_player.rowan_room
  - service: script.rowan_light
    data:
      brightness_pct: 25
      transition: 10
      colour: 15, 50
  - service: light.turn_on
    data: {}
    target:
      entity_id: light.rowan_main_ir
  mode: single
send_magic_packet:
  alias: Turn on PC
  sequence:
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.kyle_office_outlet_relay
  - delay:
      hours: 0
      minutes: 0
      seconds: 10
      milliseconds: 0
  - service: wake_on_lan.send_magic_packet
    data:
      mac: 18:c0:4d:07:7c:2d
  description: ''
  mode: single
'1692591388656':
  alias: Set Observed Holidays
  sequence:
  - repeat:
      for_each:
      - '1'
      - '2'
      - '3'
      - '4'
      - '5'
      - '6'
      - '7'
      - '8'
      - '9'
      sequence:
      - service: calendar.create_event
        data:
          summary: Ney Year's Day
          start_date: '{%- set yearOffset = repeat.item | int %} {%- set year = now().year
            + yearOffset -%} {%- set month = 1 -%} {%- set day = 1 -%} {%- set date
            = today_at().replace(year=year, month=month, day=day) -%} {%- set delta
            = (7 - date.weekday()) if (date.weekday() > 4) else 0 -%} {{ as_timestamp(date
            + timedelta(days=delta)) | timestamp_custom(''%Y-%m-%d'') }}'
          end_date: '{%- set yearOffset = repeat.item | int %} {%- set year = now().year
            + yearOffset -%} {%- set month = 1 -%} {%- set day = 1 -%} {%- set date
            = today_at().replace(year=year, month=month, day=day) -%} {%- set delta
            = (7 - date.weekday()) if (date.weekday() > 4) else 0 -%} {{ as_timestamp(date
            + timedelta(days=delta+1)) | timestamp_custom(''%Y-%m-%d'') }}'
        target:
          entity_id: calendar.observed_holidays
  - repeat:
      for_each:
      - '1'
      - '2'
      - '3'
      - '4'
      - '5'
      - '6'
      - '7'
      - '8'
      - '9'
      sequence:
      - service: calendar.create_event
        data:
          summary: Good Friday
          start_date: '{%- set yearOffset = repeat.item | int %} {%- set year = now().year
            + yearOffset %} {%- set special_years = [''1954'', ''1981'', ''2049'',
            ''2076''] %} {%- set special_year_sub = 7 %} {%- set a = year % 19 %}
            {%- set b = year % 4 %} {%- set c = year % 7 %} {%- set d = (19 * a +
            24) % 30 %} {%- set e = ((2 * b) + (4 * c) + (6 * d) + 5) % 7 %} {%- set
            day = (22 + d + e) - special_year_sub if year in special_years else 22
            + d + e %} {%- set month = 4 if day > 31 else 3 %} {%- set day = day -
            31 if day > 31 else day -%} {{ as_timestamp(today_at().replace(year=year,
            month=month, day=day) + timedelta(days=-2)) | timestamp_custom(''%Y-%m-%d'')
            }}'
          end_date: '{%- set yearOffset = repeat.item | int %} {%- set year = now().year
            + yearOffset %} {%- set special_years = [''1954'', ''1981'', ''2049'',
            ''2076''] %} {%- set special_year_sub = 7 %} {%- set a = year % 19 %}
            {%- set b = year % 4 %} {%- set c = year % 7 %} {%- set d = (19 * a +
            24) % 30 %} {%- set e = ((2 * b) + (4 * c) + (6 * d) + 5) % 7 %} {%- set
            day = (22 + d + e) - special_year_sub if year in special_years else 22
            + d + e %} {%- set month = 4 if day > 31 else 3 %} {%- set day = day -
            31 if day > 31 else day -%} {{ as_timestamp(today_at().replace(year=year,
            month=month, day=day) + timedelta(days=-1)) | timestamp_custom(''%Y-%m-%d'')
            }}'
        target:
          entity_id: calendar.observed_holidays
  - repeat:
      for_each:
      - '1'
      - '2'
      - '3'
      - '4'
      - '5'
      - '6'
      - '7'
      - '8'
      - '9'
      sequence:
      - service: calendar.create_event
        data:
          summary: Easter Monday
          start_date: '{%- set yearOffset = repeat.item | int %} {%- set year = now().year
            + yearOffset %} {%- set special_years = [''1954'', ''1981'', ''2049'',
            ''2076''] %} {%- set special_year_sub = 7 %} {%- set a = year % 19 %}
            {%- set b = year % 4 %} {%- set c = year % 7 %} {%- set d = (19 * a +
            24) % 30 %} {%- set e = ((2 * b) + (4 * c) + (6 * d) + 5) % 7 %} {%- set
            day = (22 + d + e) - special_year_sub if year in special_years else 22
            + d + e %} {%- set month = 4 if day > 31 else 3 %} {%- set day = day -
            31 if day > 31 else day -%} {{ as_timestamp(today_at().replace(year=year,
            month=month, day=day) + timedelta(days=1)) | timestamp_custom(''%Y-%m-%d'')
            }}'
          end_date: '{%- set yearOffset = repeat.item | int %} {%- set year = now().year
            + yearOffset %} {%- set special_years = [''1954'', ''1981'', ''2049'',
            ''2076''] %} {%- set special_year_sub = 7 %} {%- set a = year % 19 %}
            {%- set b = year % 4 %} {%- set c = year % 7 %} {%- set d = (19 * a +
            24) % 30 %} {%- set e = ((2 * b) + (4 * c) + (6 * d) + 5) % 7 %} {%- set
            day = (22 + d + e) - special_year_sub if year in special_years else 22
            + d + e %} {%- set month = 4 if day > 31 else 3 %} {%- set day = day -
            31 if day > 31 else day -%} {{ as_timestamp(today_at().replace(year=year,
            month=month, day=day) + timedelta(days=2)) | timestamp_custom(''%Y-%m-%d'')
            }}'
        target:
          entity_id: calendar.observed_holidays
  - repeat:
      for_each:
      - '1'
      - '2'
      - '3'
      - '4'
      - '5'
      - '6'
      - '7'
      - '8'
      - '9'
      sequence:
      - service: calendar.create_event
        data:
          summary: Victoria Day
          start_date: '{%- set yearOffset = repeat.item | int %} {%- set year = now().year
            + yearOffset -%} {%- set month = 5 -%} {%- set day = 0 -%} {%- set date
            = today_at().replace(year=year, month=month, day=25) %} {%- set adjust
            = (day - date.weekday()) % 7 %} {% set date = date + timedelta(days=adjust)
            -%} {{ as_timestamp(date + timedelta(weeks = -1)) | timestamp_custom(''%Y-%m-%d'')
            }}'
          end_date: '{%- set yearOffset = repeat.item | int %} {%- set year = now().year
            + yearOffset -%} {%- set month = 5 -%} {%- set day = 0 -%} {%- set date
            = today_at().replace(year=year, month=month, day=25) %} {%- set adjust
            = (day - date.weekday()) % 7 %} {% set date = date + timedelta(days=adjust)
            -%} {{ as_timestamp(date + timedelta(weeks = -1,days=1)) | timestamp_custom(''%Y-%m-%d'')
            }}'
        target:
          entity_id: calendar.observed_holidays
  - repeat:
      for_each:
      - '1'
      - '2'
      - '3'
      - '4'
      - '5'
      - '6'
      - '7'
      - '8'
      - '9'
      sequence:
      - service: calendar.create_event
        data:
          summary: Canada Day
          start_date: '{%- set yearOffset = repeat.item | int %} {%- set year = now().year
            + yearOffset -%} {%- set month = 7 -%} {%- set day = 1 -%} {%- set date
            = today_at().replace(year=year, month=month, day=day) -%} {%- set delta
            = (7 - date.weekday()) if (date.weekday() > 4) else 0 -%} {{ as_timestamp(date
            + timedelta(days=delta)) | timestamp_custom(''%Y-%m-%d'') }}'
          end_date: '{%- set yearOffset = repeat.item | int %} {%- set year = now().year
            + yearOffset -%} {%- set month = 7 -%} {%- set day = 1 -%} {%- set date
            = today_at().replace(year=year, month=month, day=day) -%} {%- set delta
            = (7 - date.weekday()) if (date.weekday() > 4) else 0 -%} {{ as_timestamp(date
            + timedelta(days=delta+1)) | timestamp_custom(''%Y-%m-%d'') }}'
        target:
          entity_id: calendar.observed_holidays
  - repeat:
      for_each:
      - '1'
      - '2'
      - '3'
      - '4'
      - '5'
      - '6'
      - '7'
      - '8'
      - '9'
      sequence:
      - service: calendar.create_event
        data:
          summary: Civic Holiday
          start_date: '{%- set yearOffset = repeat.item | int %} {%- set year = now().year
            + yearOffset -%} {%- set month = 8 -%} {%- set week = 1 -%} {%- set day
            = 0 -%} {%- set date = today_at().replace(year=year, month=month, day=1)
            %} {%- set adjust = (day - date.weekday()) % 7 %} {%- set date = date
            + timedelta(days=adjust) -%} {{ as_timestamp(date + timedelta(weeks =
            week - 1)) | timestamp_custom(''%Y-%m-%d'') }}'
          end_date: '{%- set yearOffset = repeat.item | int %} {%- set year = now().year
            + yearOffset -%} {%- set month = 8 -%} {%- set week = 1 -%} {%- set day
            = 0 -%} {%- set date = today_at().replace(year=year, month=month, day=1)
            %} {%- set adjust = (day - date.weekday()) % 7 %} {%- set date = date
            + timedelta(days=adjust) -%} {{ as_timestamp(date + timedelta(weeks =
            week - 1,days=1)) | timestamp_custom(''%Y-%m-%d'') }}'
        target:
          entity_id: calendar.observed_holidays
  - repeat:
      for_each:
      - '1'
      - '2'
      - '3'
      - '4'
      - '5'
      - '6'
      - '7'
      - '8'
      - '9'
      sequence:
      - service: calendar.create_event
        data:
          summary: Labour Day
          start_date: '{%- set yearOffset = repeat.item | int %} {%- set year = now().year
            + yearOffset -%} {%- set month = 9 -%} {%- set week = 1 -%} {%- set day
            = 0 -%} {%- set date = today_at().replace(year=year, month=month, day=1)
            %} {%- set adjust = (day - date.weekday()) % 7 %} {%- set date = date
            + timedelta(days=adjust) -%} {{ as_timestamp(date + timedelta(weeks =
            week - 1)) | timestamp_custom(''%Y-%m-%d'') }}'
          end_date: '{%- set yearOffset = repeat.item | int %} {%- set year = now().year
            + yearOffset -%} {%- set month = 9 -%} {%- set week = 1 -%} {%- set day
            = 0 -%} {%- set date = today_at().replace(year=year, month=month, day=1)
            %} {%- set adjust = (day - date.weekday()) % 7 %} {%- set date = date
            + timedelta(days=adjust) -%} {{ as_timestamp(date + timedelta(weeks =
            week - 1,days=1)) | timestamp_custom(''%Y-%m-%d'') }}'
        target:
          entity_id: calendar.observed_holidays
  - repeat:
      for_each:
      - '1'
      - '2'
      - '3'
      - '4'
      - '5'
      - '6'
      - '7'
      - '8'
      - '9'
      sequence:
      - service: calendar.create_event
        data:
          summary: Truth and Reconciliation
          start_date: '{%- set yearOffset = repeat.item | int %} {%- set year = now().year
            + yearOffset -%} {%- set month = 9 -%} {%- set day = 30 -%} {%- set date
            = today_at().replace(year=year, month=month, day=day) -%} {%- set delta
            = (7 - date.weekday()) if (date.weekday() > 4) else 0 -%} {{ as_timestamp(date
            + timedelta(days=delta)) | timestamp_custom(''%Y-%m-%d'') }}'
          end_date: '{%- set yearOffset = repeat.item | int %} {%- set year = now().year
            + yearOffset -%} {%- set month = 9 -%} {%- set day = 30 -%} {%- set date
            = today_at().replace(year=year, month=month, day=day) -%} {%- set delta
            = (7 - date.weekday()) if (date.weekday() > 4) else 0 -%} {{ as_timestamp(date
            + timedelta(days=delta+1)) | timestamp_custom(''%Y-%m-%d'') }}'
        target:
          entity_id: calendar.observed_holidays
  - repeat:
      for_each:
      - '1'
      - '2'
      - '3'
      - '4'
      - '5'
      - '6'
      - '7'
      - '8'
      - '9'
      sequence:
      - service: calendar.create_event
        data:
          summary: Thanksgiving
          start_date: '{%- set yearOffset = repeat.item | int %} {%- set year = now().year
            + yearOffset -%} {%- set month = 10 -%} {%- set week = 2 -%} {%- set day
            = 0 -%} {%- set date = today_at().replace(year=year, month=month, day=1)
            %} {%- set adjust = (day - date.weekday()) % 7 %} {%- set date = date
            + timedelta(days=adjust) -%} {{ as_timestamp(date + timedelta(weeks =
            week - 1)) | timestamp_custom(''%Y-%m-%d'') }}'
          end_date: '{%- set yearOffset = repeat.item | int %} {%- set year = now().year
            + yearOffset -%} {%- set month = 10 -%} {%- set week = 2 -%} {%- set day
            = 0 -%} {%- set date = today_at().replace(year=year, month=month, day=1)
            %} {%- set adjust = (day - date.weekday()) % 7 %} {%- set date = date
            + timedelta(days=adjust) -%} {{ as_timestamp(date + timedelta(weeks =
            week - 1,days=1)) | timestamp_custom(''%Y-%m-%d'') }}'
        target:
          entity_id: calendar.observed_holidays
  - repeat:
      for_each:
      - '1'
      - '2'
      - '3'
      - '4'
      - '5'
      - '6'
      - '7'
      - '8'
      - '9'
      sequence:
      - service: calendar.create_event
        data:
          summary: Remembrance Day
          start_date: '{%- set yearOffset = repeat.item | int %} {%- set year = now().year
            + yearOffset -%} {%- set month = 11 -%} {%- set day = 11 -%} {%- set date
            = today_at().replace(year=year, month=month, day=day) -%} {%- set delta
            = (7 - date.weekday()) if (date.weekday() > 4) else 0 -%} {{ as_timestamp(date
            + timedelta(days=delta)) | timestamp_custom(''%Y-%m-%d'') }}'
          end_date: '{%- set yearOffset = repeat.item | int %} {%- set year = now().year
            + yearOffset -%} {%- set month = 11 -%} {%- set day = 11 -%} {%- set date
            = today_at().replace(year=year, month=month, day=day) -%} {%- set delta
            = (7 - date.weekday()) if (date.weekday() > 4) else 0 -%} {{ as_timestamp(date
            + timedelta(days=delta+1)) | timestamp_custom(''%Y-%m-%d'') }}'
        target:
          entity_id: calendar.observed_holidays
  - repeat:
      for_each:
      - '1'
      - '2'
      - '3'
      - '4'
      - '5'
      - '6'
      - '7'
      - '8'
      - '9'
      sequence:
      - service: calendar.create_event
        data:
          summary: Chistmas
          start_date: '{%- set yearOffset = repeat.item | int %} {%- set year = now().year
            + yearOffset -%} {%- set month = 12 -%} {%- set day = 25 -%} {%- set date
            = today_at().replace(year=year, month=month, day=day) -%} {%- set delta
            = (7 - date.weekday()) if (date.weekday() > 4) else 0 -%} {{ as_timestamp(date
            + timedelta(days=delta)) | timestamp_custom(''%Y-%m-%d'') }}'
          end_date: '{%- set yearOffset = repeat.item | int %} {%- set year = now().year
            + yearOffset -%} {%- set month = 12 -%} {%- set day = 25 -%} {%- set date
            = today_at().replace(year=year, month=month, day=day) -%} {%- set delta
            = (7 - date.weekday()) if (date.weekday() > 4) else 0 -%} {{ as_timestamp(date
            + timedelta(days=delta+1)) | timestamp_custom(''%Y-%m-%d'') }}'
        target:
          entity_id: calendar.observed_holidays
  - repeat:
      for_each:
      - '1'
      - '2'
      - '3'
      - '4'
      - '5'
      - '6'
      - '7'
      - '8'
      - '9'
      sequence:
      - service: calendar.create_event
        data:
          summary: Boxing Day
          start_date: '{%- set yearOffset = repeat.item | int %} {%- set year = now().year
            + yearOffset -%} {%- set month = 12 -%} {%- set day = 26 -%} {%- set date
            = today_at().replace(year=year, month=month, day=day) -%} {%- set delta
            = 2 if (date.weekday() > 4) else 0 -%} {{ as_timestamp(date + timedelta(days=delta))
            | timestamp_custom(''%Y-%m-%d'') }}'
          end_date: '{%- set yearOffset = repeat.item | int %} {%- set year = now().year
            + yearOffset -%} {%- set month = 12 -%} {%- set day = 26 -%} {%- set date
            = today_at().replace(year=year, month=month, day=day) -%} {%- set delta
            = 2 if (date.weekday() > 4) else 0 -%} {{ as_timestamp(date + timedelta(days=delta+1))
            | timestamp_custom(''%Y-%m-%d'') }}'
        target:
          entity_id: calendar.observed_holidays
  mode: single
